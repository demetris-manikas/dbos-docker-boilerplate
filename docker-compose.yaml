version: '3.8'

services:
  app:
    image: ${REGISTRY}dbos-app:latest
    container_name: dbos-app
    restart: unless-stopped
    build:
      context: app
    ports:
      - '3000:3000'
    volumes:
      - ./app:/home/node/app
    environment:
      APP_DB_HOSTNAME: dbos-db
      APP_DB_NAME: ${APP_DB_NAME}
      APP_DB_USER: ${APP_DB_USER}
      APP_DB_PASSWORD: ${APP_DB_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
      broker:
        condition: service_healthy

  db:
    container_name: dbos-db
    image: ${REGISTRY}dbos-db:latest
    build:
      context: db
    ports:
      - '127.0.0.1:5435:5432'
    shm_size: 128mb
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 10s
      retries: 3
      start_period: 1s
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      APP_DB_NAME: ${APP_DB_NAME}
      APP_DB_USER: ${APP_DB_USER}
      APP_DB_PASSWORD: ${APP_DB_PASSWORD}

  broker:
    image: apache/kafka:latest
    container_name: broker
    user: root
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://broker:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: 'd86da882-0c82-11ef-8bb9-a757193d3343'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    volumes:
      - kafka_data:/tmp/kraft-combined-logs
    healthcheck:
      test: ["CMD-SHELL", "/opt/kafka/bin/kafka-cluster.sh cluster-id --bootstrap-server localhost:9092 || exit 1"]
      interval: 2s
      timeout: 12s
      retries: 4
      start_period: 2s

  keycloak-db:
    hostname: keycloak-db
    container_name: keycloak-db
    image: ${REGISTRY}keycloak-db:latest
    build:
      context: keycloak-db
    ports:
      - '127.0.0.1:5436:5432'
    shm_size: 128mb
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 10s
      retries: 3
      start_period: 1s
    volumes:
      - keycloak_db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_DB_NAME: ${KC_DB}
      KEYCLOAK_DB_USER: ${KC_DB_USERNAME}
      KEYCLOAK_DB_PASSWORD: ${KC_DB_PASSWORD}

  keycloak:
    image: keycloak/keycloak:latest
    container_name: keycloak
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_SCHEMA: public
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KC_DB_URL_HOST: keycloak-db
      KC_DB_URL_PORT: 5432
      KC_HTTP_ENABLED: "true"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_PROXY: "edge"
    ports:
      - '8080:8080'
    depends_on:
      keycloak-db:
        condition: service_healthy

volumes:
  kafka_data:
    driver: local
  db_data:
    driver: local
  keycloak_db_data:
    driver: local
