{{- define "template.dpl"}}
{{ $serviceName := include "template.svc.name" . }}
{{ $image := printf "%s/%s:%s" .registry .deployment.image.name .deployment.image.version}}
{{ $probeMethod := toYaml .deployment.probe.method }}
{{ $livenessSettings := .deployment.probe.liveness }}
{{ $readinessSettings := .deployment.probe.readiness }}
{{ $requestsSettings := .deployment.resources }}

{{ $volumeName := include "template.pv.name" . }}
{{ $volumeClaimName := include "template.pvc.name" . }}

apiVersion: apps/v1

kind: Deployment

metadata:
  name: {{ $serviceName }}
{{- include "template.labels" . | indent 2 }}
spec:
  selector:
    matchLabels:
      service: {{ $serviceName }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .deployment.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .deployment.rollingUpdate.maxUnavailable }}
  revisionHistoryLimit: {{ .deployment.revisionHistoryLimit }}
  template:
    metadata:
      labels:
        service: {{ $serviceName }}
    spec:
      {{ if .volumeMountPath }}
      volumes:
        - name: {{ $volumeName }}
          persistentVolumeClaim:
            claimName: {{ $volumeClaimName }}
      {{ end }}
      containers:
        - name: {{ $serviceName }}
          image: {{ $image }}
          imagePullPolicy: Always
          {{ if .volumeMountPath }}
          volumeMounts:
            - name: {{ $volumeName }}
              mountPath: {{ .volumeMountPath }}
          {{ end }}
          envFrom:
            - configMapRef:
                name: {{ include "template.configmap.name" . }}
            - secretRef:
                name: {{ include "template.secrets.name" . }}
          resources:
            requests:
              memory: {{ $requestsSettings.requests.memory }}
              cpu: {{ $requestsSettings.requests.cpu }}
            limits:
              memory: {{ $requestsSettings.limits.memory }}
              cpu: {{ $requestsSettings.limits.cpu }}
          readinessProbe:
            initialDelaySeconds: {{ $readinessSettings.initialDelaySeconds }}
            successThreshold: {{ $readinessSettings.successThreshold }}
            failureThreshold: {{ $readinessSettings.failureThreshold }}
            periodSeconds: {{ $readinessSettings.periodSeconds }}
            timeoutSeconds: {{ $readinessSettings.timeoutSeconds }}
{{$probeMethod | indent 12 }}
          livenessProbe:
            initialDelaySeconds: {{ $livenessSettings.initialDelaySeconds }}
            successThreshold: {{ $livenessSettings.successThreshold }}
            failureThreshold: {{ $livenessSettings.failureThreshold }}
            periodSeconds: {{ $livenessSettings.periodSeconds }}
            timeoutSeconds: {{ $livenessSettings.timeoutSeconds }}
{{$probeMethod | indent 12 }}
          ports:
            - containerPort: {{ .service.port }}
      restartPolicy: Always
status: {}

{{ end -}}
