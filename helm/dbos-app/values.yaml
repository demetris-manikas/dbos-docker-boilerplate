registry: localhost:32000

backend:
  name: app-backend
  deployment:
    image:
      name: app-backend
      version: latest
    revisionHistoryLimit: 5
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    resources:
      requests:
        memory: "1Gi"
        cpu: 1
      limits:
        memory: "2Gi"
        cpu: 2
    probe:
      method:
        httpGet:
          path: /
          port: 3000
          scheme: HTTP
      liveness:
        initialDelaySeconds: 10
        successThreshold: 1
        failureThreshold: 3
        periodSeconds: 3
        timeoutSeconds: 12
      readiness:
        initialDelaySeconds: 1
        successThreshold: 1
        failureThreshold: 3
        periodSeconds: 1
        timeoutSeconds: 3
  service:
    port: 3000
    targetPort: 3000
    ingress:
      className: nginx
      host: app.dbosapp.test
  volume:
    hostPath: ""
    storage: 1Gi
    accessMode: ReadOnlyMany
  config:
    brokers: 'kafka-headless.kafka.svc.cluster.local:9092'
  secrets:
    APP_DB_NAME: app
    APP_DB_USER: app
    APP_DB_PASSWORD: app

backend_db:
  name: app-backend-db
  service:
    port: 5432
    targetPort: 5432
  deployment:
    image:
      name: app-backend-db
      version: latest
    revisionHistoryLimit: 5
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    resources:
      requests:
        memory: 1Gi
        cpu: 1
      limits:
        memory: 1Gi
        cpu: 1
    probe:
      method:
        exec:
          command: ["sh", "-c", "pg_isready"]
      liveness:
        initialDelaySeconds: 10
        successThreshold: 1
        failureThreshold: 3
        periodSeconds: 3
        timeoutSeconds: 12
      readiness:
        initialDelaySeconds: 1
        successThreshold: 1
        failureThreshold: 3
        periodSeconds: 1
        timeoutSeconds: 3
  volume:
    hostPath: ""
    storage: 1Gi
    accessMode: ReadWriteOnce
  secrets:
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres

keycloak:
  name: app-keycloak
  deployment:
    image:
      name: app-keycloak
      version: latest
    revisionHistoryLimit: 5
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    resources:
      requests:
        memory: "1Gi"
        cpu: 1
      limits:
        memory: "2Gi"
        cpu: 2
    probe:
      method:
        httpGet:
          path: /health/live
          port: 8080
          scheme: HTTP
      liveness:
        initialDelaySeconds: 40
        successThreshold: 1
        failureThreshold: 3
        periodSeconds: 3
        timeoutSeconds: 12
      readiness:
        initialDelaySeconds: 40
        successThreshold: 1
        failureThreshold: 3
        periodSeconds: 1
        timeoutSeconds: 3
  service:
    port: 8080
    targetPort: 8080
    ingress:
      className: nginx
      host: auth.dbosapp.test
  secrets:
    KEYCLOAK_ADMIN: "admin"
    KEYCLOAK_ADMIN_PASSWORD: "admin"
    KC_DB_USERNAME: "keycloak"
    KC_DB_PASSWORD: "keycloak"
  env:
    KC_DB_URL_DATABASE: "keycloak"

keycloak_db:
  name: app-keycloak-db
  service:
    port: 5432
    targetPort: 5432
  deployment:
    image:
      name: app-keycloak-db
      version: latest
    revisionHistoryLimit: 5
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    resources:
      requests:
        memory: 1Gi
        cpu: 1
      limits:
        memory: 1Gi
        cpu: 1
    probe:
      method:
        exec:
          command: ["sh", "-c", "pg_isready"]
      liveness:
        initialDelaySeconds: 10
        successThreshold: 1
        failureThreshold: 3
        periodSeconds: 3
        timeoutSeconds: 12
      readiness:
        initialDelaySeconds: 1
        successThreshold: 1
        failureThreshold: 3
        periodSeconds: 1
        timeoutSeconds: 3
  volume:
    hostPath: ""
    storage: 1Gi
    accessMode: ReadWriteOnce
  secrets:
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    KEYCLOAK_DB_NAME: keycloak
    KEYCLOAK_DB_USER: keycloak
    KEYCLOAK_DB_PASSWORD: keycloak
